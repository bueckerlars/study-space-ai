name: Build and Push Docker Images

on:
  push:
    tags:
      - 'v*'  # Wird ausgelöst, wenn ein Tag mit 'v' beginnt, z.B. v1.0.0

jobs:
  checkout:
    name: Checkout Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  setup-docker:
    name: Set up Docker Buildx
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

  login-docker:
    name: Login to Docker Hub
    runs-on: ubuntu-latest
    needs: setup-docker
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

  extract-version:
    name: Extract Version Information
    runs-on: ubuntu-latest
    needs: login-docker
    steps:
      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Extract full tag name
        id: get_full_tag
        run: echo "FULL_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Display version information
        run: |
          echo "Building with version: ${{ env.VERSION }}"
          echo "Full tag: ${{ env.FULL_TAG }}"

  build-frontend:
    name: Build and Push Frontend
    runs-on: ubuntu-latest
    needs: extract-version
    steps:
      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/study-space-frontend:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/study-space-frontend:${{ env.FULL_TAG }}
          build-args: |
            VITE_API_URL=/api

  build-backend:
    name: Build and Push Backend
    runs-on: ubuntu-latest
    needs: extract-version
    steps:
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/study-space-backend:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/study-space-backend:${{ env.FULL_TAG }}

  build-ocr-service:
    name: Build and Push OCR Service
    runs-on: ubuntu-latest
    needs: extract-version
    steps:
      - name: Build and push ocr-service
        uses: docker/build-push-action@v5
        with:
          context: ./ocr-service
          file: ./ocr-service/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/study-space-ocr-service:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/study-space-ocr-service:${{ env.FULL_TAG }}

  summary:
    name: Summary
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend, build-ocr-service]
    steps:
      - name: Summary
        run: |
          echo "Successfully built and pushed the following images:"
          echo "- ${{ secrets.DOCKER_HUB_USERNAME }}/study-space-frontend:latest (${{ env.FULL_TAG }})"
          echo "- ${{ secrets.DOCKER_HUB_USERNAME }}/study-space-backend:latest (${{ env.FULL_TAG }})"
          echo "- ${{ secrets.DOCKER_HUB_USERNAME }}/study-space-ocr-service:latest (${{ env.FULL_TAG }})"

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: summary
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.FULL_TAG }}
          tag_name: ${{ env.FULL_TAG }}
          body: |
            ## Study Space AI ${{ env.FULL_TAG }}

            Release Notes:
            
            Docker Images für diese Version:
            
            ### Frontend
            - Docker Hub: [larsbuecker/study-space-frontend:${{ env.FULL_TAG }}](https://hub.docker.com/r/larsbuecker/study-space-frontend/tags?name=${{ env.FULL_TAG }})
            - `docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/study-space-frontend:${{ env.FULL_TAG }}`
            
            ### Backend
            - Docker Hub: [larsbuecker/study-space-backend:${{ env.FULL_TAG }}](https://hub.docker.com/r/larsbuecker/study-space-backend/tags?name=${{ env.FULL_TAG }})
            - `docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/study-space-backend:${{ env.FULL_TAG }}`
            
            ### OCR Service
            - Docker Hub: [larsbuecker/study-space-ocr-service:${{ env.FULL_TAG }}](https://hub.docker.com/r/larsbuecker/study-space-ocr-service/tags?name=${{ env.FULL_TAG }})
            - `docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/study-space-ocr-service:${{ env.FULL_TAG }}`     
          generate_release_notes: true
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}