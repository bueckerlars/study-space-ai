version: '3.8'

services:
  frontend:
    image: larsbuecker/study-space-frontend:latest
    ports:
      - "3000:80"  # Expose Nginx port 80 to host port 3000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  backend:
    image: larsbuecker/study-space-backend:latest
    ports:
      - "5066:5066"
    environment:
      - PORT=5066
      - DB_USERNAME=db
      - DB_PASSWORD=<your-password>       # Use the same password as in the db service
      - DB_NAME=db
      - DB_HOST=db
      - DB_DIALECT=postgres
      - JWT_SECRET=<your-secret>          # Use a strong secret for JWT
      - LOG_LEVEL=INFO
      - OLLAMA_API_URL=http://host.docker.internal:11434                  # If running on docker host -> http://host.docker.internal:11434
      - OCR_SERVICE_URL=http://ocr-service:8000
      - CORS_ORIGIN=${CORS_ORIGIN:-http://frontent:3000} 
    volumes:
      - upload_files:/app/uploads 
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=db
      - POSTGRES_PASSWORD=<your-password>  # Use the same password as in the backend service
      - POSTGRES_DB=db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network

  ocr-service:
    image: larsbuecker/study-space-ocr-service:latest
    ports:
      - "8000:8000"
    environment:
      - OCR_SERVICE_PORT=8000
      - ALLOWED_ORIGINS=${CORS_ORIGIN:-http://localhost:5066,http://backend:5066,http://localhost:3000}
    volumes:
      - ocr_output:/app/output
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  upload_files:  
  ocr_output:  
